// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component renders with custom styles 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "red",
      "borderRadius": 10,
      "height": 84,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255,255,255)",
          "fontSize": 16,
        },
        Object {
          "color": "yellow",
          "fontSize": 12,
        },
      ]
    }
  >
    Button with custom styles
  </Text>
</View>
`;

exports[`Button component renders with default props 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgb(24,100,167)",
      "borderRadius": 10,
      "height": 84,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255,255,255)",
          "fontSize": 16,
        },
        Object {},
      ]
    }
  >
    Default primary theme
  </Text>
</View>
`;

exports[`Button component renders with disabled theme 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 10,
      "height": 84,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255,255,255)",
          "fontSize": 16,
        },
        Object {},
      ]
    }
  >
    Disabled theme
  </Text>
</View>
`;

exports[`Button component renders with secondary theme 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": undefined,
      "borderRadius": 10,
      "height": 84,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255,255,255)",
          "fontSize": 16,
        },
        Object {},
      ]
    }
  >
    Secondary theme
  </Text>
</View>
`;
